import os
import pandas as pd
from snakemake.utils import validate, min_version

shell.executable("bash")

configfile: "config.yml"
localrules: all

samples_df=pd.read_csv(config["sampleSheet"]).set_index("name", drop = False)
samples_dict = samples_df.to_dict(orient='index')
ALL_SAMPLES = samples_df.index.to_list()

chromNoPatch = config["ChromNoPatch"]
chromSizes = config["chromSizes"]
blacklist = config["blacklist"]

ext = config["bamExtension"]

ctrl = config["peakInput"]
sig_val = config["significance_value"]

if sig_val=="FDR":
        thresh=config["FDR_threshold"]
elif sig_val=="PVALUE":
        thresh=config["PVAL_threshold"]

rule all:
	input:
		expand("01.peaks/{sample}/{sample}_peaks.narrowPeak", sample=ALL_SAMPLES),
		expand("01.peaks/{sample}/{sample}_peaks.xls", sample=ALL_SAMPLES),
		expand("01.peaks/{sample}/{sample}_summits.bed", sample=ALL_SAMPLES),
		expand("01.peaks/{sample}/{sample}_islandFiltered.bam", sample=ALL_SAMPLES)

rule callPeaks:
	input:
		bam="00.bams/{sample}{ext}"
	output:
		"01.peaks/{sample}/{sample}_peaks.narrowPeak",
		"01.peaks/{sample}/{sample}_peaks.xls",
		"01.peaks/{sample}/{sample}_summits.bed"
	log: "01.peaks/{sample}/{sample}.peakCalling.log"
	run:
		print("input = {}".format(ctrl))
		if ctrl.lower() == 'none' and sig_val == 'PVALUE':
			print("No control, using p-value")
			shell("macs2 callpeak -t {input.bam} -n {wildcards.sample} -p {thresh} --bw=300 --keep-dup=1 --outdir 01.peaks/{wildcards.sample} &> log")
		elif ctrl.lower() == 'none' and sig_val == 'FDR':
			print("No control, using FDR")
			shell("macs2 callpeak -t {input.bam} -n {wildcards.sample} -q {thresh} --bw=300 --keep-dup=1 --outdir 01.peaks/{wildcards.sample} &> {log}")
		elif ctrl.lower() != 'none' and sig_val == 'PVALUE':
			print("With control file, using p-value")
                        shell("macs2 callpeak -t {input.bam} -c {ctrl} -n {wildcards.sample} -p {thresh} --bw=300 --keep-dup=1 --outdir 01.peaks/{wildcards.sample} &> {log}")
		elif ctrl.lower() != 'none' and sig_val == 'FDR':
			print("With control file, using FDR")
                        shell("macs2 callpeak -t {input.bam} -c {ctrl} -n {wildcards.sample} -q {thresh} --bw=300 --keep-dup=1 --outdir 01.peaks/{wildcards.sample} &> {log}")

rule islandFilterBam:
	input:
		narrowPeak="01.peaks/{sample}/{sample}_peaks.narrowPeak",
		ogbam="00.bams/{sample}{ext}"
	output:
		filtBam="01.peaks/{sample}/{sample}_islandFiltered.bam"
	log: "01.peaks/{sample}/{sample}_filterSlopBam.log"
	shell:
		"""
		module load homer-4.11
		makeTagDirectory 01.peaks/{wildcards.sample} {input.ogbam} -format sam
		FRAGSIZE=$(grep "fragmentLengthEstimate=" 01.peaks/{wildcards.sample}/tagInfo.txt | awk 'gsub(/fragmentLengthEstimate=/,"")')
		SHIFT=$(echo "${{FRAGSIZE}}/2"|bc)

		cut -f1-3 {input.narrowPeak} | bedtools sort -i - | bedtools slop -b ${{SHIFT}} -i - -g {chromSizes} | bedtools intersect -b - -a {input.ogbam} -wa | bedtools intersect -a - -b {blacklist} -v | samtools sort -m 15000000000 - -o {output.filtBam} &> {log}
		"""
	


